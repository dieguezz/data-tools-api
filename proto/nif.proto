syntax = "proto3";

option go_package = "github.com/dieguezz/nif-tools/protopb";

package proto;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service NifApi {
  // NIF
  rpc GetNIFControlDigit(NIF) returns (ControlDigitResponse) {
    option (google.api.http) = {
      get : "/nif/controldigit/{nif}"
    };
  };
  rpc GetType(NIF) returns (TypeResponse) {
    option (google.api.http) = {
      get : "/nif/type/{nif}"
    };
  };
  rpc GenerateNIF(google.protobuf.Empty) returns (NIF) {
    option (google.api.http) = {
      get : "/nif/generate"
    };
  };
  rpc ValidateNIF(NIF) returns (IsValid) {
    option (google.api.http) = {
      get : "/nif/validate/{nif}"
    };
  };

  // NIE
  rpc GenerateNIE(google.protobuf.Empty) returns (NIE) {
    option (google.api.http) = {
      get : "/nie/generate"
    };
  };
  rpc ValidateNIE(NIE) returns (IsValid) {
    option (google.api.http) = {
      get : "/nie/validate/{nie}"
    };
  };


  // NIF - NIE - CIF
  rpc GetParsedDocument(Document) returns (ParsedDocumentResponse) {
    option (google.api.http) = {
      get : "/document/parse/{document}"
    };
  };
  rpc ValidateDocument(Document) returns (IsValid) {
    option (google.api.http) = {
      get : "/document/validate/{document}"
    };
  };

  // CIF
  rpc GetCIFControlDigit(CIF) returns (ControlDigitResponse) {
    option (google.api.http) = {
      get : "/cif/controldigit/{cif}"
    };
  };
  rpc GenerateCIF(google.protobuf.Empty) returns (CIF) {
    option (google.api.http) = {
      get : "/cif/generate"
    };
  };
    rpc ValidateCIF(CIF) returns (IsValid) {
    option (google.api.http) = {
      get : "/cif/validate/{cif}"
    };
  };
}

message NIF { string nif = 1; }

message CIF { string cif = 1; }

message Document { string document = 1; }

message ControlDigitResponse { string control_digit = 1; }

message ParsedDocumentResponse {
  int32 number = 1;
  string kind = 2;
  string control = 3;
}

message TypeResponse { string type = 1; }

message NIE { string nie = 1; }

message IsValid { bool isValid = 1; }